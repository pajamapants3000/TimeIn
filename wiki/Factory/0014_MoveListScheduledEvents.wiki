%title Move ListScheduledEventsComponent (Task 0014) | Tasks | TimeIn

    = Contents =
    - [[#User Story|User Story]]
    - [[#Solution Breakdown|Solution Breakdown]]
        - [[#Solution Breakdown#Frontend|Frontend]]
            - [[#Solution Breakdown#Frontend#ListComponent|ListComponent]]
                - [[#Solution Breakdown#Frontend#ListComponent#Tests|Tests]]
            - [[#Solution Breakdown#Frontend#ScheduledEventsComponent|ScheduledEventsComponent]]
                - [[#Solution Breakdown#Frontend#ScheduledEventsComponent#Tests|Tests]]
                    - [[#Solution Breakdown#Frontend#ScheduledEventsComponent#Tests#Updates|Updates]]
                    - [[#Solution Breakdown#Frontend#ScheduledEventsComponent#Tests#New|New]]
            - [[#Solution Breakdown#Frontend#ScheduledEventDisplayComponent|ScheduledEventDisplayComponent]]
                - [[#Solution Breakdown#Frontend#ScheduledEventDisplayComponent#Tests|Tests]]
    - [[#Additional Tasks|Additional Tasks]]
    - [[#To-Do|To-Do]]
    - [[#Progress|Progress]]
    - [[#Next|Next]]

= User Story =
* Move ListScheduledEventsComponent from the root module into a new feature
module - ScheduledEventDisplayModule
* Behavior should be unchanged
= Solution Breakdown =
* [X] Create ScheduledEventDisplayModule
* [ ] Create ListComponent in ScheduledEventDisplayModule
* [ ] Create IntracomService in ScheduledEventDisplayModule
== Frontend ==
=== ListComponent ===
==== Tests ====
* [X] should create
* [X] should display list of scheduled events from test data, listed in order',
* [X] should render future events using scheduled-event-list-item-future css class',
* [X] should render past events using scheduled-event-list-item-past css class',
* [X] should render with date, name, and "Details" button for each event',
* ~~should call onIdSelected on intracom-service with correct id when "Details" clicked~~
    * commented out until task 15
* [ ] should emit onIdSelected with correct id when "Details" clicked
    * keep
* ~~should update list when scheduledEvents subject receives new list~~
    * commented out until task 15
* [X] should update list when scheduledEvents updated
    * drop in task 15
* [X] should unsubscribe from scheduledEvents subscription in ngOnDestroy
=== ScheduledEventsComponent ===
* this component will now handle calls to the service to obtain scheduled events
    to be listed
==== Tests ====
===== Updates =====
* should render ListScheduledEvents component
    * should render ListComponent
* should open side nav when `onOpenDetails` is called
    * should open side nav when `openDetails` is called
* should call `openDetails` when onIdSelected event is emitted',
* should open side nav when openDetails event is emitted
    * should open side nav when onIdSelected event is emitted
* should set ScheduledEventDetails detailsId input to correct id when
    ListScheduledEvents raises `openDetailsEvent` event
    * should set ScheduledEventDetails detailsId input to correct id when
        ListComponent raises `onIdSelected` event
* should toggle ListScheduledEvents `updateSwitch` input when `closeDetailsEvent` is true
    * should call getScheduledEventList when `closeDetailsEvent` is true
* should not toggle ListScheduledEvents `updateSwitch` input when
    `closeDetailsEvent` is false
    * should not call getScheduledEventList when `closeDetailsEvent` is false
===== New =====
* should call `getScheduledEventList` service method in ngOnInit
=== ScheduledEventDisplayComponent ===
==== Tests ====
= Additional Tasks =
= To-Do =
= Progress =
* Complete!
* All unit tests passing - working on end-to-end publish
* ListComponent written and passing all tests
= Next =
* implement updates to ScheduledEventsComponent


