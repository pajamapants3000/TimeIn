// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeIn.Api.Models;

namespace TimeIn.Api.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20181227130519_ScheduledEvent")]
    partial class ScheduledEvent
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TimeIn.Api.Models.Reminder", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("isCompleted");

                    b.Property<string>("value");

                    b.HasKey("id");

                    b.ToTable("Reminder");
                });

            modelBuilder.Entity("TimeIn.Api.Models.ScheduledEvent", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description");

                    b.Property<int>("durationInMinutes");

                    b.Property<string>("name");

                    b.Property<DateTime>("when");

                    b.HasKey("id");

                    b.ToTable("ScheduledEvent");
                });
#pragma warning restore 612, 618
        }
    }
}
